

My Notes:
---------

- plugins
  - to extend gradle for new domain
  - ex
    - apply plugin: 'java'
    

- gradle uses convention ovr configuration

- gradle java expected directory structure
  - src
    - main
      - java
      - resources
    - test
      - java
      - resources
    
  - build
    - classes
      - main
      - test
    - libs


- gradle -b marc.gradle -i assemble

- look at lecture 10 for how to hunt down documentsyion

- external repositories and dependencies
  - most common repositories
    - mavenCentral()
    - jcenter()
  - ie:
    - testCompile 'junit:junit:4.12'
    
- repositories
  - foleder full of jars
  - ie:
    repositories {
      flatDir {
        dirs 'libs'
      }
    }
  
  - remote
  - ie:
    repositories {
      mavenCentral()
      mavenLocal()
      jcenter()
    }
    
  - maven and ivy repositories
  - ie:
    repositories {
      maven {
        url 'https://repo.foo.org/m2'
      }
      ivy {
        url 'https://repo.foo.org/m3'
        credentials {
          username 'user'
          password 'passeord'
        }
      }
    }
    
    
- dependencies
  - assined to configurations
    - ie: compile
  - in dependencies cstip block
  - can also have multi project dependencies for multi project builds
  - ie:
  
    dependencies {
      compile 'com.google.guava:guava:18.0'
      compile group: 'com.google.com', name: 'guava', version: '18.0'
      compile files('lib/foo.jar', 'libs/bar.jar')
      compile fileTree(dir: 'libs', include: '*.jar')
    }
    
- dependency report
  - graph of depedencies
    - ie: gradlel dependencies
    - ie: gradle dependencies --configuration runtime
    
  - inight of dependencies (how a particular dependency is included in the project)
    - good to identify version conflicts
    - ie: gradle dependencyInsight --dependency commons-logging
    
- depdency configuration (groupings by function)
  - makes sure the required dependencies are on the classpath when the corresponding tasks are run
  - ie:
    - runtime
    - compile
    - testCompile -> extends from the compile configuration
    - testRuntime
  - can careta ecustome configurations
    - ie:
      configurations {
        custom
      }
      
      dependencies {
        custom 'com.google.guava:guava:18.0'
      }
      
      task copyDependencies(type: Copy) {
        from configurations.custom
        into 'build/libs'
      }
    
- tests
  - test reports are in build/reports/tests/index.html
  
- gradle plugins
  - 3 broad pluigins
    - langua=ge plugins )to compile languages)
    - integration plugins to crete artifacts
    - softeare development plugins to make the softeare deevlopment process easier
  - lugns portal
    - plugins.gradle.org
    
    
- gradle wrapper
  - helps to put your build tool under source controle
  - 4 parts: jar, properties file, sh script,, bat script
  - create the warapper by running the wrapper task
    - ie: gradle wrapper
  - then use the wrapper
    - ./gradlew tasks
  - can also add the gradle property of the wrapper task in the build.gradle
    - ie:
      wrapper {
        gradleVersion = '2.2'
      }
  - gradle config options are stored in the gradle/wrapper/gradle-wrapper.properties
  

  
  
    
    


Udacity Notes:
--------------






